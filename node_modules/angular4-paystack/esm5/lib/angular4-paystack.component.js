/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Input, Output, EventEmitter } from '@angular/core';
import { Angular4PaystackService } from './angular4-paystack.service';
/**
 * @record
 */
function MyWindow() { }
if (false) {
    /** @type {?} */
    MyWindow.prototype.PaystackPop;
}
var Angular4PaystackComponent = /** @class */ (function () {
    function Angular4PaystackComponent(paystackService) {
        this.paystackService = paystackService;
        this.paymentInit = new EventEmitter();
        this.onClose = new EventEmitter(); // tslint:disable-line
        // tslint:disable-line
        this.callback = new EventEmitter();
        // tslint:disable-line
        this.isPaying = false;
    }
    /**
     * @return {?}
     */
    Angular4PaystackComponent.prototype.pay = /**
     * @return {?}
     */
    function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var errorText, payment;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        errorText = '';
                        if (this.paystackOptions && Object.keys(this.paystackOptions).length >= 2) {
                            errorText = this.valdateInput(this.paystackOptions);
                            this.generateOptions(this.paystackOptions);
                        }
                        else {
                            errorText = this.valdateInput(this);
                            this.generateOptions(this);
                        }
                        if (errorText) {
                            console.error(errorText);
                            return [2 /*return*/, errorText];
                        }
                        return [4 /*yield*/, this.paystackService.loadScript()];
                    case 1:
                        _a.sent();
                        if (this.isPaying) {
                            return [2 /*return*/];
                        }
                        if (this.paymentInit.observers.length) {
                            this.paymentInit.emit();
                        }
                        payment = window.PaystackPop.setup(this._paystackOptions);
                        payment.openIframe();
                        this.isPaying = true;
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    Angular4PaystackComponent.prototype.valdateInput = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        if (!this.callback.observers.length) {
            return 'ANGULAR-PAYSTACK: Insert a callback output like so (callback)=\'PaymentComplete($event)\' to check payment status';
        }
        return this.paystackService.checkInput(obj);
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    Angular4PaystackComponent.prototype.generateOptions = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        var _this = this;
        this._paystackOptions = this.paystackService.getPaystackOptions(obj);
        this._paystackOptions.onClose = (/**
         * @return {?}
         */
        function () {
            if (_this.onClose.observers.length) {
                _this.isPaying = false;
                _this.onClose.emit();
            }
        });
        this._paystackOptions.callback = (/**
         * @param {...?} response
         * @return {?}
         */
        function () {
            var _a;
            var response = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                response[_i] = arguments[_i];
            }
            _this.isPaying = false;
            (_a = _this.callback).emit.apply(_a, tslib_1.__spread(response));
        });
    };
    Angular4PaystackComponent.decorators = [
        { type: Component, args: [{
                    selector: 'angular4-paystack',
                    template: "<button [ngClass]=\"class\" [ngStyle]=\"style\" (click)=\"pay()\"><ng-content></ng-content></button>"
                }] }
    ];
    /** @nocollapse */
    Angular4PaystackComponent.ctorParameters = function () { return [
        { type: Angular4PaystackService }
    ]; };
    Angular4PaystackComponent.propDecorators = {
        key: [{ type: Input }],
        email: [{ type: Input }],
        amount: [{ type: Input }],
        metadata: [{ type: Input }],
        ref: [{ type: Input }],
        currency: [{ type: Input }],
        plan: [{ type: Input }],
        quantity: [{ type: Input }],
        channels: [{ type: Input }],
        subaccount: [{ type: Input }],
        transaction_charge: [{ type: Input }],
        bearer: [{ type: Input }],
        class: [{ type: Input }],
        style: [{ type: Input }],
        paystackOptions: [{ type: Input }],
        paymentInit: [{ type: Output }],
        onClose: [{ type: Output }],
        callback: [{ type: Output }]
    };
    return Angular4PaystackComponent;
}());
export { Angular4PaystackComponent };
if (false) {
    /** @type {?} */
    Angular4PaystackComponent.prototype.key;
    /** @type {?} */
    Angular4PaystackComponent.prototype.email;
    /** @type {?} */
    Angular4PaystackComponent.prototype.amount;
    /** @type {?} */
    Angular4PaystackComponent.prototype.metadata;
    /** @type {?} */
    Angular4PaystackComponent.prototype.ref;
    /** @type {?} */
    Angular4PaystackComponent.prototype.currency;
    /** @type {?} */
    Angular4PaystackComponent.prototype.plan;
    /** @type {?} */
    Angular4PaystackComponent.prototype.quantity;
    /** @type {?} */
    Angular4PaystackComponent.prototype.channels;
    /** @type {?} */
    Angular4PaystackComponent.prototype.subaccount;
    /** @type {?} */
    Angular4PaystackComponent.prototype.transaction_charge;
    /** @type {?} */
    Angular4PaystackComponent.prototype.bearer;
    /** @type {?} */
    Angular4PaystackComponent.prototype.class;
    /** @type {?} */
    Angular4PaystackComponent.prototype.style;
    /** @type {?} */
    Angular4PaystackComponent.prototype.paystackOptions;
    /** @type {?} */
    Angular4PaystackComponent.prototype.paymentInit;
    /** @type {?} */
    Angular4PaystackComponent.prototype.onClose;
    /** @type {?} */
    Angular4PaystackComponent.prototype.callback;
    /** @type {?} */
    Angular4PaystackComponent.prototype._paystackOptions;
    /**
     * @type {?}
     * @private
     */
    Angular4PaystackComponent.prototype.isPaying;
    /**
     * @type {?}
     * @private
     */
    Angular4PaystackComponent.prototype.paystackService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ndWxhcjQtcGF5c3RhY2suY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5ndWxhcjQtcGF5c3RhY2svIiwic291cmNlcyI6WyJsaWIvYW5ndWxhcjQtcGF5c3RhY2suY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUV2RSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQzs7OztBQUV0RSx1QkFFQzs7O0lBREMsK0JBQWlCOztBQUluQjtJQXlCRSxtQ0FBb0IsZUFBd0M7UUFBeEMsb0JBQWUsR0FBZixlQUFlLENBQXlCO1FBTGxELGdCQUFXLEdBQXNCLElBQUksWUFBWSxFQUFPLENBQUM7UUFDekQsWUFBTyxHQUFzQixJQUFJLFlBQVksRUFBTyxDQUFDLENBQUMsc0JBQXNCOztRQUM1RSxhQUFRLEdBQXNCLElBQUksWUFBWSxFQUFPLENBQUM7O1FBRXhELGFBQVEsR0FBRyxLQUFLLENBQUM7SUFDc0MsQ0FBQzs7OztJQUUxRCx1Q0FBRzs7O0lBQVQ7Ozs7Ozt3QkFDTSxTQUFTLEdBQUcsRUFBRTt3QkFDbEIsSUFBSSxJQUFJLENBQUMsZUFBZSxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDLE1BQU0sSUFBSSxDQUFDLEVBQUU7NEJBQ3pFLFNBQVMsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQzs0QkFDcEQsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUM7eUJBQzVDOzZCQUFNOzRCQUNMLFNBQVMsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxDQUFDOzRCQUNwQyxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxDQUFDO3lCQUM1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Qjs7Ozs7SUFDYixvREFBZ0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBQYXlzdGFja09wdGlvbnMsIFByaXZhdGVQYXlzdGFja09wdGlvbnMgfSBmcm9tICcuL3BheXN0YWNrLW9wdGlvbnMnO1xyXG5pbXBvcnQgeyBBbmd1bGFyNFBheXN0YWNrU2VydmljZSB9IGZyb20gJy4vYW5ndWxhcjQtcGF5c3RhY2suc2VydmljZSc7XHJcblxyXG5pbnRlcmZhY2UgTXlXaW5kb3cgZXh0ZW5kcyBXaW5kb3cge1xyXG4gIFBheXN0YWNrUG9wOiBhbnk7XHJcbn1cclxuZGVjbGFyZSB2YXIgd2luZG93OiBNeVdpbmRvdztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYW5ndWxhcjQtcGF5c3RhY2snLFxyXG4gIHRlbXBsYXRlOiBgPGJ1dHRvbiBbbmdDbGFzc109XCJjbGFzc1wiIFtuZ1N0eWxlXT1cInN0eWxlXCIgKGNsaWNrKT1cInBheSgpXCI+PG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PjwvYnV0dG9uPmAsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBBbmd1bGFyNFBheXN0YWNrQ29tcG9uZW50IHtcclxuICBASW5wdXQoKSBrZXk6IHN0cmluZztcclxuICBASW5wdXQoKSBlbWFpbDogc3RyaW5nO1xyXG4gIEBJbnB1dCgpIGFtb3VudDogbnVtYmVyO1xyXG4gIEBJbnB1dCgpIG1ldGFkYXRhOiB7fTtcclxuICBASW5wdXQoKSByZWY6IHN0cmluZztcclxuICBASW5wdXQoKSBjdXJyZW5jeTogc3RyaW5nO1xyXG4gIEBJbnB1dCgpIHBsYW46IHN0cmluZztcclxuICBASW5wdXQoKSBxdWFudGl0eTogc3RyaW5nO1xyXG4gIEBJbnB1dCgpIGNoYW5uZWxzOiBzdHJpbmdbXTtcclxuICBASW5wdXQoKSBzdWJhY2NvdW50OiBzdHJpbmc7XHJcbiAgQElucHV0KCkgdHJhbnNhY3Rpb25fY2hhcmdlOiBudW1iZXI7IC8vIHRzbGludDpkaXNhYmxlLWxpbmVcclxuICBASW5wdXQoKSBiZWFyZXI6IHN0cmluZztcclxuICBASW5wdXQoKSBjbGFzczogc3RyaW5nO1xyXG4gIEBJbnB1dCgpIHN0eWxlOiBvYmplY3Q7XHJcbiAgQElucHV0KCkgcGF5c3RhY2tPcHRpb25zOiBQYXlzdGFja09wdGlvbnM7XHJcbiAgQE91dHB1dCgpIHBheW1lbnRJbml0OiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xyXG4gIEBPdXRwdXQoKSBvbkNsb3NlOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpOyAvLyB0c2xpbnQ6ZGlzYWJsZS1saW5lXHJcbiAgQE91dHB1dCgpIGNhbGxiYWNrOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xyXG4gIHB1YmxpYyBfcGF5c3RhY2tPcHRpb25zOiBQYXJ0aWFsPFByaXZhdGVQYXlzdGFja09wdGlvbnM+OyAvLyB0c2xpbnQ6ZGlzYWJsZS1saW5lXHJcbiAgcHJpdmF0ZSBpc1BheWluZyA9IGZhbHNlO1xyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcGF5c3RhY2tTZXJ2aWNlOiBBbmd1bGFyNFBheXN0YWNrU2VydmljZSkge31cclxuXHJcbiAgYXN5bmMgcGF5KCkge1xyXG4gICAgbGV0IGVycm9yVGV4dCA9ICcnO1xyXG4gICAgaWYgKHRoaXMucGF5c3RhY2tPcHRpb25zICYmIE9iamVjdC5rZXlzKHRoaXMucGF5c3RhY2tPcHRpb25zKS5sZW5ndGggPj0gMikge1xyXG4gICAgICBlcnJvclRleHQgPSB0aGlzLnZhbGRhdGVJbnB1dCh0aGlzLnBheXN0YWNrT3B0aW9ucyk7XHJcbiAgICAgIHRoaXMuZ2VuZXJhdGVPcHRpb25zKHRoaXMucGF5c3RhY2tPcHRpb25zKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGVycm9yVGV4dCA9IHRoaXMudmFsZGF0ZUlucHV0KHRoaXMpO1xyXG4gICAgICB0aGlzLmdlbmVyYXRlT3B0aW9ucyh0aGlzKTtcclxuICAgIH1cclxuICAgIGlmIChlcnJvclRleHQpIHtcclxuICAgICAgY29uc29sZS5lcnJvcihlcnJvclRleHQpO1xyXG4gICAgICByZXR1cm4gZXJyb3JUZXh0O1xyXG4gICAgfVxyXG4gICAgYXdhaXQgdGhpcy5wYXlzdGFja1NlcnZpY2UubG9hZFNjcmlwdCgpO1xyXG4gICAgaWYgKHRoaXMuaXNQYXlpbmcpIHsgcmV0dXJuOyB9XHJcbiAgICBpZiAodGhpcy5wYXltZW50SW5pdC5vYnNlcnZlcnMubGVuZ3RoKSB7XHJcbiAgICAgIHRoaXMucGF5bWVudEluaXQuZW1pdCgpO1xyXG4gICAgfVxyXG4gICAgY29uc3QgcGF5bWVudCA9IHdpbmRvdy5QYXlzdGFja1BvcC5zZXR1cCh0aGlzLl9wYXlzdGFja09wdGlvbnMpO1xyXG4gICAgcGF5bWVudC5vcGVuSWZyYW1lKCk7XHJcbiAgICB0aGlzLmlzUGF5aW5nID0gdHJ1ZTtcclxuICB9XHJcblxyXG4gIHZhbGRhdGVJbnB1dChvYmo6IFBheXN0YWNrT3B0aW9ucykge1xyXG4gICAgaWYgKCF0aGlzLmNhbGxiYWNrLm9ic2VydmVycy5sZW5ndGgpIHtcclxuICAgICAgcmV0dXJuICdBTkdVTEFSLVBBWVNUQUNLOiBJbnNlcnQgYSBjYWxsYmFjayBvdXRwdXQgbGlrZSBzbyAoY2FsbGJhY2spPVxcJ1BheW1lbnRDb21wbGV0ZSgkZXZlbnQpXFwnIHRvIGNoZWNrIHBheW1lbnQgc3RhdHVzJztcclxuICAgIH1cclxuICAgIHJldHVybiB0aGlzLnBheXN0YWNrU2VydmljZS5jaGVja0lucHV0KG9iaik7XHJcbiAgfVxyXG5cclxuICBnZW5lcmF0ZU9wdGlvbnMob2JqOiBQYXlzdGFja09wdGlvbnMpIHtcclxuICAgIHRoaXMuX3BheXN0YWNrT3B0aW9ucyA9IHRoaXMucGF5c3RhY2tTZXJ2aWNlLmdldFBheXN0YWNrT3B0aW9ucyhvYmopO1xyXG4gICAgdGhpcy5fcGF5c3RhY2tPcHRpb25zLm9uQ2xvc2UgPSAoKSA9PiB7XHJcbiAgICAgIGlmICh0aGlzLm9uQ2xvc2Uub2JzZXJ2ZXJzLmxlbmd0aCkge1xyXG4gICAgICAgIHRoaXMuaXNQYXlpbmcgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLm9uQ2xvc2UuZW1pdCgpO1xyXG4gICAgICB9XHJcbiAgICB9O1xyXG4gICAgdGhpcy5fcGF5c3RhY2tPcHRpb25zLmNhbGxiYWNrID0gKC4uLnJlc3BvbnNlKSA9PiB7XHJcbiAgICAgIHRoaXMuaXNQYXlpbmcgPSBmYWxzZTtcclxuICAgICAgdGhpcy5jYWxsYmFjay5lbWl0KC4uLnJlc3BvbnNlKTtcclxuICAgIH07XHJcbiAgfVxyXG5cclxufVxyXG4iXX0=